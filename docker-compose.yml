version: "3.9"
services:
  app:
    image: ${REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG}
    #image: trustai-backend
    #build: .                   # You only need build: . locally <--- If you're pulling from GHCR and not building locally, remove the build: . line.
    ports:
      - "8080:8080"
    depends_on:
      - db
    environment:
      #SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/appdb?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
#      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/${DB_NAME}
#      SPRING_DATASOURCE_USERNAME: ${DB_USER}
#      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
#      SPRING_JPA_HIBERNATE_DDL_AUTO: create #create, update
      spring.datasource.url: jdbc:mysql://db:3306/${DB_NAME}
      spring.datasource.username: ${DB_USER}
      spring.datasource.password: ${DB_PASSWORD}
      spring.jpa.hibernate.ddl-auto: create
    restart: unless-stopped
    networks:
      - backend
    volumes:
      - /home/logs:/logs  # Logs are saved to host directory
      - /home/uploads:/app/uploads

  db:
    image: mysql:8.0
    command: >
      --default-authentication-plugin=mysql_native_password 
      --character-set-server=utf8mb4 
      --collation-server=utf8mb4_unicode_ci
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    ports:
      - "3307:3306" # Container's MySQL will still listen on port 3306, but you will access it via port 3307
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-u", "root", "-p${DB_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped # always
    networks:
      - backend

volumes:
  mysql_data:
networks:
  backend: